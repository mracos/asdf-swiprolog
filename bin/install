#!/usr/bin/env bash

set -eu
[ "${BASH_VERSINFO[0]}" -ge 3 ] && set -o pipefail

die () {
    echo "$1"
    exit 1
}

# stolen (with some modifications) from https://stackoverflow.com/a/4025065
compare_version() {
  if [[ $1 == $2 ]];
  then
    echo '='
    return 0
  fi
  local IFS=.
  local i ver1=($1) ver2=($2)
  # fill empty fields in ver1 with zeros
  for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
  do
    ver1[i]=0
  done
  for ((i=0; i<${#ver1[@]}; i++))
  do
    if [[ -z ${ver2[i]} ]]
    then
      # fill empty fields in ver2 with zeros
      ver2[i]=0
    fi
    if ((10#${ver1[i]} > 10#${ver2[i]}))
    then
      echo '>'
      return 0
    fi
    if ((10#${ver1[i]} < 10#${ver2[i]}))
    then
      echo '<'
      return 0
    fi
  done
  echo '='
  return 0
}

get_download_file_path() {
    local install_type="$1"
    local version="$2"
    local tmp_download_dir="$3"

    local pkg_name="swi-prolog-$install_type-$version.tar.gz"

    echo "$tmp_download_dir/$pkg_name"
}

download_source_file() {
    local install_type="$1"
    local version="$2"
    local download_path="$3"
    local download_url="http://www.swi-prolog.org/download/stable/src/swipl-$version.tar.gz"

    # if devel suffix in version we install from development channel
    if [[ "$version" =~ .*-devel ]]
    then
        # remove the -devel suffix from version
        download_url="http://www.swi-prolog.org/download/devel/src/swipl-${version%-devel}.tar.gz"
    fi

    curl --fail -Lo "$download_path" "$download_url" || die "error fetching $download_url"
}

install_prolog() {
    local install_type="$1"
    local version="$2"
    local install_path="$3"
    local tmp_download_dir
    tmp_download_dir="$(mktemp -dt swi-prolog_build_XXXXXX)"

    local source_path
    source_path="$(get_download_file_path "$install_type" "$version" "$tmp_download_dir")"

    download_source_file "$install_type" "$version" "$source_path"

    (
        tar zxf "$source_path" -C "$install_path" --strip-components=1 || die "error untaring $source_path"
        cd "$install_path"

        # For versions after 7.7.21 the build system changed from
        # gnu autotools and make to cmake with ninja
        # Here we compare versions without the '-devel' suffix (if any)
        if [[ "$(compare_version ${version%-devel} 7.7.21)" == '>' ]]; then
          cmake -DCMAKE_INSTALL_PREFIX=$install_path -G Ninja
          ninja
          ninja install
        else
          ./configure \
              --prefix="$install_path" \
              --with-world \
              --without-jpl \
              --without-xpce \
              --disable-libdirversion
          make
          make install
        fi
    )
}

install_prolog "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
